a <- available.packages()
a
fixed=c(FALSE,FALSE)
fixed
params <- fixed
params[!fixed]
params[!fixed] <- p
x <- as.Date("1990-01-01")
x
weekdays(x)
months(x)
quarters(x)
x <- Sys.time()
x
p <- as POSIXlt(x)
p <- as.POSIXlt(x)
p
name(unclass(p))
unclass(p)
names(unclass(p))
p$sec
x <- Sys.time()
x
## Already in POSIXct format
source('~/.active-rstudio-document')
makevector()
makeVector()
source('~/.active-rstudio-document')
source('~/Documents/Development/Coursera/020-rprogramming/cachemean.R')
makeVector(c(1,2,3))
x<- makeVector(c(1,2,3))
x <- makeVector(c(1,2,3))
x$getmean()
x$set
cachemean(x)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
m
solve(m)
cachedM <- makeCacheMatrix(m)
unclass(cachedM)
cachedM$getMatrix
cachedM$getMatrix()
help(solve)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
cachedM$getMatrix()
cacheSolve(m)
cachedM$getSolved()
source('~/.active-rstudio-document')
cacheSolve(m)
cacheSolve(makeCacheMatrix(m))
y <- makeCacheMatrix(m)
y$getMatrix
y$getMatrix()
cacheSolve(y)
y <- makeVector(c(1,2,3))
cachemean(y)
cachemean(y)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
y$getMatrix()
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
makeCacheMatrix(m)
y <- makeCacheMatrix(m)
y$getMatrix()
cacheSolve(y)
cacheSolve(y)
cacheSolve(y)
y$getSolved()
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
y <- makeCacheMatrix(m)
cacheSolve(y)
cacheSolve(y)
library(datasets)
data(iris)
iris
?iris
virginica <- iris[Species = "virginica"]
sub.iris <- iris[iris$Species %in% "virginica",]
sub.iris
sepal <- sub.iris[[Sepal.Length]]
sepal <- sub.iris[sub.iris$Sepal.Length,]
sepal
sepal <- NULL
type(sub.iris)
attr(sub.iris)
sub.iris
sub.iris[["Sepal.Length"]]
sepal <- sub.iris[["Sepal.Length"]]
mean(sepal)
colMeans(iris)
applu(iris, 2, mean)
apply(iris, 2, mean)
rowMeans[iris[, 1:4]]
iris[, 1:4]
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 3, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
?mtcars
debug(ls)
ls
ls
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
avghp <- with(mtcars, tapply(hp, cyl, mean))
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1/script.R')
getwd()
setwd("/Users/elau/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b")
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
data <- read.csv(fileName)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
data
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
typeof(myData)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
data <- read.table(fileName, sep = ",", header = TRUE)
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b")
}
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
myData
typeof(myData)
subset(myData, !(is.na(VAL)), select = c(VAL))
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
myProperty
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
myProperty
source('~/.active-rstudio-document')
myProperty
length(myProperty)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
length(myProperty)
myProperty
length(myProperty)
typeof(myProperty)
head(myProperty)
nrow(myProperty)
nrow(myProperty)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
nrow(myProperty)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
sum(dat$Zip * dat$Ext , na.rm = T)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
xmlRoot(myRestaurant)
xmlName(xmlRoot(myRestaurant))
names(rootNode)
source('~/.active-rstudio-document')
names(rootNode)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
names(rootNode)
rootNode
xmlName(rootNode)
names(myRestaurant)
names(rootNode)
rootNode[[1]]
rootNode[[1] [1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
source('~/.active-rstudio-document')
xpathSApply(rootNode, "//zipcode", xmlValue)
source('~/.active-rstudio-document')
zipCode
typeof(zipCode)
length(zipCode)
data.frame(zipCode)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
head(zipCode)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
zipCode[zipCode$zipCode == 1, ]
length(zipCode)
nrow(zipCode)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
zipCode[zipCode$zipCode == "21231", ]
zipCode[, zipCode$zipCode == "21231"]
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
mySub
typeof(mySub)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
mySub <- zipCode[zipCode$zipCode == 21231, ]
mySub
nrows(mySub)
length(mySub)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
head(DT)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
system.time(tapply(DT$pwgtp15, DT$SEX, mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1], rowMeans(DT)[DT$SEX==2])
system.time(mean(DT$pwgtp15,by=DT$SEX))
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
system.time(mean(DT$pwgtp15, by = DT$SEX))               # user 0.002 system 0.000 elapsed 0.000
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1] / rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
system.time(expression)
expression
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week1b/quiz1.R')
expression
mean(DT[DT$SEX==1,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
sapply(split(DT$pwgtp15, DT$SEX), mean))
sapply(split(DT$pwgtp15, DT$SEX), mean)
rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==2, ]
rowMeans(DT)[,DT$SEX==2]
system.time(DT[, mean(pwgtp15), by = SEX])
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
{rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]}
