a <- available.packages()
a
fixed=c(FALSE,FALSE)
fixed
params <- fixed
params[!fixed]
params[!fixed] <- p
x <- as.Date("1990-01-01")
x
weekdays(x)
months(x)
quarters(x)
x <- Sys.time()
x
p <- as POSIXlt(x)
p <- as.POSIXlt(x)
p
name(unclass(p))
unclass(p)
names(unclass(p))
p$sec
x <- Sys.time()
x
## Already in POSIXct format
source('~/.active-rstudio-document')
makevector()
makeVector()
source('~/.active-rstudio-document')
source('~/Documents/Development/Coursera/020-rprogramming/cachemean.R')
makeVector(c(1,2,3))
x<- makeVector(c(1,2,3))
x <- makeVector(c(1,2,3))
x$getmean()
x$set
cachemean(x)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
m
solve(m)
cachedM <- makeCacheMatrix(m)
unclass(cachedM)
cachedM$getMatrix
cachedM$getMatrix()
help(solve)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
cachedM$getMatrix()
cacheSolve(m)
cachedM$getSolved()
source('~/.active-rstudio-document')
cacheSolve(m)
cacheSolve(makeCacheMatrix(m))
y <- makeCacheMatrix(m)
y$getMatrix
y$getMatrix()
cacheSolve(y)
y <- makeVector(c(1,2,3))
cachemean(y)
cachemean(y)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
y$getMatrix()
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
makeCacheMatrix(m)
y <- makeCacheMatrix(m)
y$getMatrix()
cacheSolve(y)
cacheSolve(y)
cacheSolve(y)
y$getSolved()
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
y <- makeCacheMatrix(m)
cacheSolve(y)
cacheSolve(y)
library(datasets)
data(iris)
iris
?iris
virginica <- iris[Species = "virginica"]
sub.iris <- iris[iris$Species %in% "virginica",]
sub.iris
sepal <- sub.iris[[Sepal.Length]]
sepal <- sub.iris[sub.iris$Sepal.Length,]
sepal
sepal <- NULL
type(sub.iris)
attr(sub.iris)
sub.iris
sub.iris[["Sepal.Length"]]
sepal <- sub.iris[["Sepal.Length"]]
mean(sepal)
colMeans(iris)
applu(iris, 2, mean)
apply(iris, 2, mean)
rowMeans[iris[, 1:4]]
iris[, 1:4]
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 3, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
?mtcars
debug(ls)
ls
ls
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
avghp <- with(mtcars, tapply(hp, cyl, mean))
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week2/quiz2.R')
restData()
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3")
dir.create("./data")
}
## Summarising examples
#setwd("...")
if (!file.exists("./data")) {
dir.create("./data")
}
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3/summarising_examples.R')
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3/summarising_examples.R')
restData
head(restData, n=3)
tail(restData, n=3)
tail(restData, n=3)
summary(restData)
str(restData)
quantile(restData$councilDistrict, na.rm=TRUE)
quantile(restData$councilDistrict, probs=c(0.5, 0.75, 0.9))
table(restData$zipCode, useNA = "ifany")
myTable <- table(restData$zipCode, useNA = "ifany")
name(myTable)
class(myTable)
myTable
myTable$-21226
myTable[,1]
myTable[1,]
myTable[1]
ifany
table(restData$zipCode, restData$neighborhood)
table(restData$zipCode, restData$name)
table(restData$zipCode, restData$councilDistrict)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(restData$zipCode > 0)
rest
colSums(is.na(restData))
all(colSums(is.na(restData)) == 0)
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212", "21213"))
restData[restData$zipCode %in% c("21212", "21213")]
restData[restData$zipCode %in% c("21212", "21213"), ]
data("UCBAdmissions")
DF = as.data.frame((UCBAdmissions))
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit, data=DF)
xt
xt <- xtabs(Dept ~ Gender + Admit, data=DF)
xt <- xtabs(Freq ~ Gender + Admit, data=DF)
xtabs(Freq ~ Gender + Dept, data=DF)
xtabs(Freq ~ Gender + Dept + Admit, data=DF)
warpbreaks$replicate <- rep(1:9, len = 54)
warpbreaks
xt <- xtabs(breaks ~ ., data=warpbreaks)
xt
ftable(xt)
rnorm(1e5)
names(fakeData)
name(fakeData)
class(fakeData)
fakeData <- rnorm(1e5)
class(fakeData)
object.size(fakeData)
print(object.size(fakeData), units="Mb")
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3")
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3/create_new_variables.R')
s1 <- seq(1, 10, by=2)
s1
s2 <- seq(1, 10, length=3)
s2
x <- c(1, 3, 8, 25, 100)
seq(along = x)
restData
restData$nearMe <- restData$neighborhood %in% c("Rolank Park", "Homeland")
restData$nearMe
table(restData$nearMe)
restData$zipWrong <- ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong)
table(restData$zipWrong, restData$zipCode < 0)
restData$zipGroups <- cut(restData$zipCode, breaks=quantile(restData$zipCode))
table(restData$zipGroups)
table(restData$zipGroups, restData$zipCode)
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode, g=4)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
table(reatData$zcf)
table(restData$zcf)
restData$zcf[1:10]
class(restData$zcf)
head(restData, 3)
factor(c(1,2,3,4))
levels(restData$zcf)
yesno <- sample(c("yes", "no"), size=10, replace=TRUE)
yesno
yesnofac <- factor(yesno, levels=c("yes", "no"))
relevel(yesnofac, ref="yes")
as.numeric(yesnofac)
library(plyr)
install.packages("plyr")
install.packages("plyr")
library(plyr)
restData2 <- mutate(restData, zipGroups=cut2(zipCode, g=4))
library(Hmisc)
restData2 <- mutate(restData, zipGroups=cut2(zipCode, g=4))
restData2
table(restData2$zipgroups)
table(restData2$zipGroups)
# signif(x, digits=n)
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3")
packages.install("reshape2")
install.packages("reshape2")
install.packages("reshape2")
head(mtcars)
mtcars$carname <- rownames(mtcars)
rownames(mtcars)
head(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg", "hp"))
library(reshape2)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg", "hp"))
carMelt
head(carMelt, n=3)
summary(mtcars)
tail(carMelt, n=3)
carMelt$carname %in% "Volvo 142E"
carMelt[carMelt$carname %in% c("Volvo 142E"),]
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
tail(carMelt, n=3)
head(InsertSprays)
data("InsectSprays")
head(InsertSprays)
head(InsectSprays)
count_by_spray <- with(InsectSprays, split(count, spray))
count_by_spray
class(count_by_spray)
count_by_spray[1]
mean_by_spray <- lapply(count_by_spray, mean)
mean_by_spray
unlist(mean_by_spray)
sapply(count_by_spray, mean)
vapply(count_by_spray, mean, numeric(1))
vapply(count_by_spray, mean)
with(InsectSprays, tapply(count, spray, mean))
with(InsectSprays, by(count, spray, mean))
aggregate(count ~ spray, InsectSprays, mean)
count ~ spray
class(count ~ spray)
library(plyr)
ddply(InsertSprays, .(spray), summarise, mean.count = mean(count))
ddply(InsectSprays, .(spray), summarise, mean.count = mean(count))
dlply(InsectSprays, .(spray), summarise, mean.count = mean(count))
with(InsectSprays, ave(count, spray))
spIns <- split(InsertSprays$count, InsectSprays$spray)
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount = lapply(spIns, sum)
sprCount
spraySums <- ddply(InsectSprays, .(spray), summarise, sum=ave(count, FUN=sum))
spraySums
library(dplyr)
install.packages("dplyr")
library(dplyr)
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week3")
chicago <- readRDS("chicago.RDS")
chicago
head(chicago, n=3)
str(chicago)
names(chicago)
head(select(chicago, city:dptp))
head(select(chicago, -(city:dptp)))
chic.f <- filter(chicago, pm25tmean2 > 30)
head(chic.f)
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(chic.f)
chicago <- arrange(chicago, date)
tail(chicago)
chicago <- arrange(chicago, desc(date))
head(chicago)
tail(chicago)
chicago <- rename(chicago, pm25 = pm25tmean2, dewpoint = dptp)
head(chicago)
chicago <- mutate(chicago, pm25detred = pm25 - mean(pm25, na.rm = TRUE))
head(select(chicago, pm25, pm25detrend))
head(select(chicago, pm25, pm25detred))
chicago <- mutate(chicago, tempcat = factor(1 * (tmpd > 80), labels = c("cold", "hot")))
head(chicago)
hotcold <- group_by(chicago, tempcat)
head(hotcold)
hotcold
summarise(hotcold, pm25 = mean(pm25), o3 = max(o3tmean2), no2 = median(no2tmean2))
summarise(hotcold, pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
chicago
years <- group_by(chicago, year)
head(years)
summarize(years, pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2), no2 = medidan(no2tmean2))
summarize(years, pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>% summarize(pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
}
# Merging data
if (!file.exists("./data")) {
dir.create("./data")
}
fileURL1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileURL2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileURL1, destfile = "./data/reviews.csv", method = "curl")
download.file(fileURL2, destfile = "./data/solutions.csv", method = "curl")
reviews <- read.csv("./data/reviews.csv")
solutions <- read.csv("./data/solutions.csv")
head(reviews, 2)
head(solutions, 2)
names(reviews)
names(solutions)
mergeData <- merge(reviews, solutions, by.x = "solution_id", by.y = "id", all = TRUE)
mergeData
head(mergeData)
intersect(names(solutions), names(reviews))
head(mergeData2)
mergeData2 <- merge(reviews, solutions, all = TRUE)
head(mergeData2)
df1 <- data.frame(id = sample(1:10), x = rnorm(10))
df1 <- data.frame(id = sample(1:10), x = rnorm(10))
df1
df2 <- data.frame(id = sample(1:10), y = rnorm(10))
arrange(join(df1, df2), id)
df3 <- data.frame(id = sample(1:10), z = rnorm(10))
dfList = list(df1, df2, df3)
join_all(dfList)
# Merging data
if (!file.exists("./data")) {
dir.create("./data")
}
fileURL <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
splitNames = strsplit(names(cameraData), "\\.")
splitNames[[5]]
splitNames[[6]]
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
mylist
myList[1]
mylist[1]
mylist$letters
mylist[[1]]
splitNames[[6][1]]
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week4")
if (!file.exists("./data")) {
dir.create("./data")
}
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./data/survey.csv", method = "curl")
survey <- read.csv("./data/survey.csv")
summary(survey)
splitNames <- strsplit(names(survey), "\\.")
splitNames
splitNames <- strsplit(names(survey), "\\wgtp")
splitNames
splitNames <- strsplit(names(survey), "wgtp")
splitNames
splitNames[[123]]
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "./data/gdp.csv", method = "curl")
gdp <- read.csv("./data/gdp.csv")
summary(gdp)
gdp
names(gdp)
gdp[gdp$X.3,]
library(dplyr)
head(select(gdp, X.3))
tail(select(gdp, X.3))
dollar <- sub(",", "", select(gdp, X.3))
head(dollar, n=3)
dollar <- select(gdp, X.3)
head(dollar, n=3)
head(dollar, n=10)
class(dollar)
dollar(-c(1:4),)
dollar[(]-c(1:4),]
dollar[-c(1:4),]
dollar <- dollar[-c(1:4),] # remove header
names(dollar)
dollar$actuals <- gsub(",", "", dollar)
dollar
library(dplyr)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "./data/gdp.csv", method = "curl")
gdp <- read.csv("./data/gdp.csv")
names(gdp)
library(data.table)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, select = c("country", "ranking", null, "economy", "gdp"))
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, select = c("country", "ranking", NULL, "economy", "gdp"))
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, select = c("country", "ranking", NULL, "economy", "gdp", NULL))
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, select = c("country", "ranking"))
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, select = c("country", "ranking"))
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, drop = c(3, 6))
names(gdp)
head(dollar, n=10)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, drop = c(3, 6))
head(gdp, n=10)
setnames(gdp, "country", "rank", "countryname", "gdp")
setnames(gdp, "country", "rank", "countryname", "gdp", "1", "2", "3", "4")
setnames(gdp, "V1", "country")
setnames(gdp, "V1", "country")
setnames(gdp, "V2", "rank")
setnames(gdp, "V4", "countryname")
setnames(gdp, "V5", "gdp")
head(gdp, n=10)
head(select(gdp, country:gdp))
gdp <- select(gdp, country:gdp)
gdp
gdp2 <- mutate(gdp, gdpInt = gsub(",", "", gdp))
gdp2
gdp2
gdp2 <- mutate(gdp, gdpInt = as.integers(gsub(",", "", gdp)))
gdp2 <- mutate(gdp, gdpInt = as.integer(gsub(",", "", gdp)))
gdp2
gdp2
mean(gdp2$gdpInt)
grep("^United", gdp2$countryname)
grep("\\^United", gdp2$countryname)
grep("United", gdp2$countryname)
grep("^United", gdp2$countryname)
grepl("^United", gdp2$countryname)
table(grepl("^United", gdp2$countryname))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL, destfile = "./data/educational.csv", method = "curl")
educational <- fread("./data/educational.csv", sep = ",", header = TRUE)
head(educational)
names(educational)
mergeData <- merge(gdp2, educational, by.x = "country", by.y = "CountryCode", all = TRUE)
head(mergeData)
mergeData[grepl("June", mergeData$`Special Notes`),]
mergeData[grepl("Fiscal year end: June 30", mergeData$`Special Notes`),]
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes = index(amzn)
str(sampleTimes)
names(sampleTimes)
amzn
names(amzn)
mutate(amzn, year = as.POSIXlt(AMZN.Open))
library(dplyr)
mutate(amzn, year = as.POSIXlt(AMZN.Open))
class(amzn)
head(amzn, n=5)
mutate(amzn, year = as.POSIXlt(index))
mutate(sampleTimes, year = as.POSIXlt(sampleTimes))
class(sampleTimes)
mutate(sampleTimes, year = as.POSIXlt(Date))
sampleTimes
as.data.frame(sampleTimes)
df <- as.data.frame(sampleTimes)
name(df)
names(df)
mutate(sampleTimes, year = as.POSIXlt(sampleTimes))
mutate(df, year = as.POSIXlt(sampleTimes))
mutate(df, year = as.POSIXlt(sampleTimes)$year)
mutate(df, year = as.POSIXlt(sampleTimes)$year + 1)
mutate(df, year = as.POSIXlt(sampleTimes)$mon + 1)
mutate(df, year = as.POSIXlt(sampleTimes)$year + 1)
mutate(df, year = as.POSIXlt(sampleTimes)$year + 1900)
mutate(df, year = as.POSIXlt(sampleTimes)$mon + 1)
mutate(df, year = as.POSIXlt(sampleTimes)$day + 1)
mutate(df, year = as.POSIXlt(sampleTimes)$year + 1900)
df$sampleTimes$year
mutate(df, year = format(sampleTimes, "%Y"))
df2 <- mutate(df, year = format(sampleTimes, "%Y"))
table(df2)
df2
names(df2)
with(df2, tapply(year, count))
library(plyr)
ddply(df2, .(year), summarise, year.count = count(year))
group_by(df, sampleTimes)
group_by(df, year)
group_by(df2, year)
yeargroup <- group_by(df2, year)
yeargroup
names(yeargroup)
count(df2, "year")
count(df2, year)
