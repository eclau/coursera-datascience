a <- available.packages()
a
fixed=c(FALSE,FALSE)
fixed
params <- fixed
params[!fixed]
params[!fixed] <- p
x <- as.Date("1990-01-01")
x
weekdays(x)
months(x)
quarters(x)
x <- Sys.time()
x
p <- as POSIXlt(x)
p <- as.POSIXlt(x)
p
name(unclass(p))
unclass(p)
names(unclass(p))
p$sec
x <- Sys.time()
x
## Already in POSIXct format
source('~/.active-rstudio-document')
makevector()
makeVector()
source('~/.active-rstudio-document')
source('~/Documents/Development/Coursera/020-rprogramming/cachemean.R')
makeVector(c(1,2,3))
x<- makeVector(c(1,2,3))
x <- makeVector(c(1,2,3))
x$getmean()
x$set
cachemean(x)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
m
solve(m)
cachedM <- makeCacheMatrix(m)
unclass(cachedM)
cachedM$getMatrix
cachedM$getMatrix()
help(solve)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
cachedM$getMatrix()
cacheSolve(m)
cachedM$getSolved()
source('~/.active-rstudio-document')
cacheSolve(m)
cacheSolve(makeCacheMatrix(m))
y <- makeCacheMatrix(m)
y$getMatrix
y$getMatrix()
cacheSolve(y)
y <- makeVector(c(1,2,3))
cachemean(y)
cachemean(y)
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
y$getMatrix()
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
makeCacheMatrix(m)
y <- makeCacheMatrix(m)
y$getMatrix()
cacheSolve(y)
cacheSolve(y)
cacheSolve(y)
y$getSolved()
source('~/Documents/Development/Coursera/020-rprogramming/assignment2/cachematrix.R')
m <- matrix(c(1, 0, 5, 2, 1, 6, 3, 5, 0), nrow=3, ncol=3)
y <- makeCacheMatrix(m)
cacheSolve(y)
cacheSolve(y)
library(datasets)
data(iris)
iris
?iris
virginica <- iris[Species = "virginica"]
sub.iris <- iris[iris$Species %in% "virginica",]
sub.iris
sepal <- sub.iris[[Sepal.Length]]
sepal <- sub.iris[sub.iris$Sepal.Length,]
sepal
sepal <- NULL
type(sub.iris)
attr(sub.iris)
sub.iris
sub.iris[["Sepal.Length"]]
sepal <- sub.iris[["Sepal.Length"]]
mean(sepal)
colMeans(iris)
applu(iris, 2, mean)
apply(iris, 2, mean)
rowMeans[iris[, 1:4]]
iris[, 1:4]
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 3, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
?mtcars
debug(ls)
ls
ls
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
avghp <- with(mtcars, tapply(hp, cyl, mean))
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
source('~/Documents/Development/Coursera/coursera-datascience/012-getdata/week2/quiz2.R')
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/week4")
survey <- read.csv("./data/survey.csv")
summary(survey)
# Q1: Apply strsplit() to split all the names of the data frame on the characters 'wgtp'.
#     What is the value of the 123 element of the resulting list?
splitNames <- strsplit(names(survey), "wgtp")
splitNames[[123]]
library(dplyr)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, drop = c(3, 6))
head(gdp, n=10)
setnames(gdp, "V1", "country")
setnames(gdp, "V2", "rank")
setnames(gdp, "V4", "countryname")
setnames(gdp, "V5", "gdp")
head(gdp, n=10)
gdp <- select(gdp, country:gdp)
gdp2 <- mutate(gdp, gdpInt = as.integer(gsub(",", "", gdp)))
mean(gdp2$gdpInt)
ibrary(data.table)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, drop = c(3, 6))
head(gdp, n=10)
setnames(gdp, "V1", "country")
setnames(gdp, "V2", "rank")
setnames(gdp, "V4", "countryname")
setnames(gdp, "V5", "gdp")
head(gdp, n=10)
gdp <- select(gdp, country:gdp)
gdp2 <- mutate(gdp, gdpInt = as.integer(gsub(",", "", gdp)))
mean(gdp2$gdpInt)
library(data.table)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, drop = c(3, 6))
head(gdp, n=10)
setnames(gdp, "V1", "country")
setnames(gdp, "V2", "rank")
setnames(gdp, "V4", "countryname")
setnames(gdp, "V5", "gdp")
head(gdp, n=10)
gdp <- select(gdp, country:gdp)
gdp2 <- mutate(gdp, gdpInt = as.integer(gsub(",", "", gdp)))
mean(gdp2$gdpInt)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "./data/gdp.csv", method = "curl")
library(data.table)
gdp <- fread("./data/gdp.csv", sep = ",", header = FALSE, skip = 5, nrow = 190, drop = c(3, 6))
head(gdp, n=10)
setnames(gdp, "V1", "country")
setnames(gdp, "V2", "rank")
setnames(gdp, "V4", "countryname")
setnames(gdp, "V5", "gdp")
head(gdp, n=10)
gdp <- select(gdp, country:gdp)
gdp2 <- mutate(gdp, gdpInt = as.integer(gsub(",", "", gdp)))
mean(gdp2$gdpInt)
table(grepl("^United", gdp2$countryname))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL, destfile = "./data/educational.csv", method = "curl")
educational <- fread("./data/educational.csv", sep = ",", header = TRUE)
head(educational)
names(educational)
mergeData <- merge(gdp2, educational, by.x = "country", by.y = "CountryCode", all = TRUE)
head(mergeData)
mergeData[grepl("Fiscal year end: June 30", mergeData$`Special Notes`),]
library(quantmod)
amzn = getSymbols("AMZN", auto.assign=FALSE)
library(dplyr)
sampleTimes <- index(amzn)
df <- as.data.frame(sampleTimes)
df2 <- mutate(df, year = format(sampleTimes, "%Y"))
yeargroup <- group_by(df2, year)
count(df2, year)
amzn
yeargroup <- group_by(df2, year)
yeargroup
head(sampleTimes, n=3)
df3 <- mutate(df3, dayofweek = weekdays(as.Date(sampleTimes)))
df3 <- mutate(df2, dayofweek = weekdays(as.Date(sampleTimes)))
head(df3, n = 3)
class(df3)
df3[df$year = "2007" & dayofweek = "Monday",]
subset(df3, year = "2007" & dayofweek = "Monday")
df3[df$year == "2007" & dayofweek == "Monday",]
names(df3)
df3[df$year == "2007" & df$dayofweek == "Monday",]
df3[df$year == "2012" & df$dayofweek == "Monday",]
df3[df$dayofweek == "Monday",]
df3[df3$year == "2012" & df3$dayofweek == "Monday",]
nrows(df3[df3$year == "2012" & df3$dayofweek == "Monday",])
nrow(df3[df3$year == "2012" & df3$dayofweek == "Monday",])
setwd("~/Documents/Development/Coursera/coursera-datascience/012-getdata/assignment")
features <- read.table("./UCI HAR Dataset/features.txt", sep = "", header = FALSE)
features
features <- read.table("./UCI HAR Dataset/features.txt", sep = "", header = FALSE, col.names = c("featureId", "feature"))
features
activityLabel <- read.table("./UCI HAR Dataset/activity_labels.txt", sep = "", header = FALSE, col.names = c(NULL, "activity"))
activityLabel <- read.table("./UCI HAR Dataset/activity_labels.txt", sep = "", header = FALSE, col.names = c("activityId", "activity"))
featureLabel <- read.table("./UCI HAR Dataset/features.txt", sep = "", header = FALSE, col.names = c("featureId", "feature"))
head(activityLabel)
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", sep = "", header = FALSE)
nrow(subjectTest)
yTest <- read.table("./UCI HAR Dataset/test/y_test.txt", sep = "", header = FALSE)
nrow(yTest)
XTest <- read.table("./UCI HAR Dataset/test/total_acc_x_test.txt", sep = "", header = FALSE)
XTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = FALSE)
nrow(XTest)
ncol(XTest)
featureLabel[,1]
featureLabel[,2]
XTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = featureLabel[,2])
featureHeader <- featureLabel[,2]
class(featureHeader)
featureHeader <- featureLabel[['feature']
]
featureHeader
class(featureHeader)
as.vector(featureHeader)
class(as.vector(featureHeader))
XTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = as.vector(featureLabel[,2]))
XTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = featureLabel[,2])
XTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = FALSE, col.names = featureLabel[,2])
header(XTest)
head(XTest)
yTest
head(activityLabel)
head(yTest)
yTest <- read.table("./UCI HAR Dataset/test/y_test.txt", sep = "", header = FALSE, col.names = "activity")
head(yTest)
yTestActivity <- merge(activityLabel, yTest, by.x = "activity", by.y = "activity", all = TRUE)
head(activityLabel)
head(yTest)
yTest <- read.table("./UCI HAR Dataset/test/y_test.txt", sep = "", header = FALSE, col.names = "activityId")
yTestActivity <- merge(activityLabel, yTest, by.x = "activityId", by.y = "activityId", all = TRUE)
yTestActivity
head(yTestActivity)
yTestActivity <- yTestActivity['activity']
yTestActivity
class(yTestActivity)
nrow(subjectTest)
activityTest <- read.table("./UCI HAR Dataset/test/y_test.txt", sep = "", header = FALSE, col.names = "activityId")
activityTest <- merge(activityLabel, activityTest, by.x = "activityId", by.y = "activityId", all = TRUE)
activityTest <- activityTest['activity']
dataTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = FALSE, col.names = featureLabel[,2])
rbind(subjectTest, yTestActivity)
rbind(subjectTest, activityTest)
cbind(subjectTest, activityTest)
testDF <- cbind(subjectTest, activityTest, dataTest)
names(testDF)
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", sep = "", header = FALSE, col.names = "subject")
activityTest <- read.table("./UCI HAR Dataset/test/y_test.txt", sep = "", header = FALSE, col.names = "activityId")
activityTest <- merge(activityLabel, activityTest, by.x = "activityId", by.y = "activityId", all = TRUE)
activityTest <- activityTest['activity']
dataTest <- read.table("./UCI HAR Dataset/test/X_test.txt", sep = "", header = FALSE, col.names = featureLabel[,2])
testDF <- cbind(subjectTest, activityTest, dataTest)
names(testDF)
grepl("mean", colnames(activityTest))
grepl("*mean*", colnames(activityTest))
colnames(activityTest)
grepl("*mean*", colnames(dataTest))
grepl("(mean|std)", colnames(dataTest))
sum(grepl("(mean|std)", colnames(dataTest)))
sum(grepl("(mean)", colnames(dataTest)))
sum(grepl("(mean\(\)|std\(\))", colnames(dataTest)))
sum(grepl("(mean\\(\\)|std\\(\\))", colnames(dataTest)))
sum(grepl("mean()", colnames(dataTest)))
sum(grepl("mean()", colnames(dataTest)), fixed = TRUE)
sum(grepl("mean", colnames(dataTest)), fixed = TRUE)
sum(grepl("-mean", colnames(dataTest)), fixed = TRUE)
sum(grepl("*-mean()*", colnames(dataTest)), fixed = TRUE)
pattern <- c("*-mean\\(\\)*", "*-std\\(\\)*")
grep(pattern, colnames(dataTest))
grep(patterns[1], colnames(dataTest))
grep(pattern[1], colnames(dataTest))
pattern
grep(pattern[1], colnames(dataTest), fixed = TRUE)
pattern <- c("*-mean()*", "*-std()*")
grep(pattern[1], colnames(dataTest), fixed = TRUE)
dataTest[,grepl("mean()", colnames(dataTest), fixed = TRUE)]
grep(pattern[1], colnames(dataTest), fixed = TRUE)
dataTest[,grepl("mean", colnames(dataTest))]
colnames(dataTest[,grepl("mean", colnames(dataTest))])
colnames(dataTest[,grepl("mean", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl("mean\\(", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl("mean\(\)", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl("mean[:punct:]", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl("mean\W", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl("mean\(\)", colnames(dataTest))])
colnames(dataTest[,grepl("mean[:punct]{2}", colnames(dataTest))])
colnames(dataTest[,grepl("mean[:punct:]{2}", colnames(dataTest))])
colnames(dataTest[,grepl("mean[:punct:]", colnames(dataTest))])
colnames(dataTest[,grepl("tGravityAcc-mean()-Z", colnames(dataTest))])
head(featureLabel)
head(dataTest)
colnames(dataTest[,grepl(".mean..", colnames(dataTest))])
colnames(dataTest[,grepl(".mean..", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl(pattern, colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl(pattern[1], colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl(".mean..", colnames(dataTest), fixed = TRUE)])
colnames(dataTest[,grepl("\.mean\.\.", colnames(dataTest))])
colnames(dataTest[,grepl("\\.mean\\.\\.", colnames(dataTest))])
colnames(dataTest[,grepl("\\.mean\\.\\.|\\.std\\.\\.", colnames(dataTest))])
sub.dataTest <- dataTest[,grepl("\\.mean\\.\\.|\\.std\\.\\.", colnames(dataTest))])
sub.dataTest <- dataTest[,grepl("\\.mean\\.\\.|\\.std\\.\\.", colnames(dataTest))]
head(sub.dataTest)
sub.dataTest <- dataTest[,grepl("\\.mean\\.\\.|\\.std\\.\\.", colnames(dataTest))]
testDF <- cbind(subjectTest, activityTest, sub.dataTest)
colname(testDF)
colnames(testDF)
class(colnames(testDF))
gsub("\\.\\.", "", colnames(testDF))
colnames(sub.dataTest) <- gsub("\\.\\.", "", colnames(testDF))
colnames(sub.dataTest) <- gsub("\\.\\.", "", colnames(sub.dataTest))
testDF <- cbind(subjectTest, activityTest, sub.dataTest)
names(testDF)
subjectTrain <- read.table("./UCI HAR Dataset/train/subject_train.txt", sep = "", header = FALSE, col.names = "subject")
head(subjectTrain)
activityTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", sep = "", header = FALSE, col.names = "activityId")
activityTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", sep = "", header = FALSE, col.names = "activityId")
activityTrain <- merge(activityLabel, activityTrain, by.x = "activityId", by.y = "activityId", all = TRUE)
activityTrain <- activityTrain['activity']
head(activityTrain)
nrow(activityTrain)
dataTrain <- read.table("./UCI HAR Dataset/train/X_train.txt", sep = "", header = FALSE, col.names = featureLabel[,2])
colnames(dataTrain)
sub.dataTrain <- dataTrain[,grepl("\\.mean\\.\\.|\\.std\\.\\.", colnames(dataTrain))]
colnames(sub.dataTrain) <- gsub("\\.\\.", "", colnames(sub.dataTrain))
trainDF <- cbind(subjectTrain, activityTrain, sub.dataTrain)
colnames(trainDF)
colnames(testDF)
bindedDF <- cbind(testDF, trainDF)
bindedDF <- rbind(testDF, trainDF)
colnames(bindedDF)
bySubjectActivity <- group_by(bindedDF, subject, activity)
groups(bySubjectActivity)
?numcolwise
??numcolwise
library(plyr)
?numcolwise
ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
bySubjectActivity <- ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
bySubjectActivity <- bySubjectActivity[order(subject, activity),]
bySubjectActivity <- bySubjectActivity[order("subject"),]
bySubjectActivity <- bySubjectActivity[order("subject", "activity"),]
head(bySubjectActivity)
head(bySubjectActivity, n = 3)
bySubjectActivity
bySubjectActivity <- ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
bySubjectActivity <- bySubjectActivity[order("subject", "activity"),]
bySubjectActivity
nrow(bindedDF)
ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
bySubjectActivity <- ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
bySubjectActivity[order("subject", "activity"),]
bySubjectActivity <- ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
arrange(bySubjectActivity, subject)
arrange(bySubjectActivity, subject, activity)
nrow(arrange(bySubjectActivity, subject, activity)
)
bindedDF <- rbind(testDF, trainDF)
bySubjectActivity <- nrow(ddply(bindedDF, c("subject", "activity"), numcolwise(mean)))
bySubjectActivity
bySubjectActivity <- ddply(bindedDF, c("subject", "activity"), numcolwise(mean))
bySubjectActivity[,c(1,2)]
arrange(bySubjectActivity, subject)
arrange(bySubjectActivity, subject)[,1]
arrange(bySubjectActivity, c(subject, activity))[,c(1:2)]
arrange(bySubjectActivity, c(subject, activity))[,2]
arrange(bySubjectActivity, c(subject, activity))
arrange(bySubjectActivity, subject, activity)
arrange(bySubjectActivity, subject, activity)[,c(1,2)]
bySubjectActivity <- arrange(bySubjectActivity, subject, activity)
bySubjectActiivty
bySubjectActivity
?write.table
write.table(bySubjectActivity, file = "result.txt", row.names = FALSE)
names(bySubjectActivity)
aggregate(bindedDF, by = bindedDF[c("subject", "activity")], FUN = mean, na.rm = FALSE)
aggregate(bindedDF, by = bindedDF[c("subject", "activity")], FUN = mean, na.rm = TRUE)
warnings()
activityLabel
names(bySubjectActivity)
transpose(names(bySubjectActivity))
transpose(as.dataframe(names(bySubjectActivity)))
transpose(as.vector(names(bySubjectActivity)))
transpose(as.vector(colnames(bySubjectActivity)))
transpose(colnames(bySubjectActivity))
class(colnames(bySubjectActivity))
t(colnames(bySubjectActivity))
write.table(t(colnames(bySubjectActivity)), file = "header.text", row.names = FALSE)
